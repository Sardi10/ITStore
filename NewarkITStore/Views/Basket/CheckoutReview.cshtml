@model NewarkITStore.ViewModels.CheckoutViewModel

@{
    ViewData["Title"] = "Review & Payment";
    var subtotal = Model.BasketItems.Sum(i => i.Quantity * i.PricePerUnit);
    var tax = subtotal * 0.10m;
    var total = subtotal + tax;
    var cardTypes = new List<SelectListItem>
    {
        new("Visa", "Visa"), new("MasterCard", "MasterCard"), new("Amex", "Amex")
    };
}

<div class="container py-5">
    <h2 class="fw-bold mb-4">
        <i class="bi bi-journal-check"></i> Review Your Order
    </h2>

    <div class="table-responsive mb-5">
        <table class="table table-striped align-middle shadow-sm rounded-3 overflow-hidden">
            <thead class="table-light">
                <tr>
                    <th>Product</th>
                    <th>Qty</th>
                    <th>Unit Price</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.BasketItems)
                {
                    <tr>
                        <td>
                            @item.Product.Name
                            @if (item.Product.RecommendedPrice > item.PricePerUnit)
                            {
                                <span class="badge bg-success ms-2">Offer Applied!</span>
                            }
                        </td>
                        <td>@item.Quantity</td>
                        <td>
                            @if (item.Product.RecommendedPrice > item.PricePerUnit)
                            {
                                <span class="text-muted text-decoration-line-through me-1">
                                    @(item.Product.RecommendedPrice.ToString("C"))
                                </span>
                                <span class="text-success fw-bold">@(item.PricePerUnit.ToString("C"))</span>
                            }
                            else
                            {
                                @(item.PricePerUnit.ToString("C"))
                            }
                        </td>
                        <td class="fw-bold">@((item.PricePerUnit * item.Quantity).ToString("C"))</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <form asp-action="Checkout" method="post">
        @Html.AntiForgeryToken()

        <div class="row g-4">
            <div class="col-lg-8">
                <div class="p-4 border rounded-3 shadow-sm mb-4">
                    <h4 class="mb-3">Shipping Address</h4>
                    <div class="mb-3">
                        <label class="form-label">Select a Shipping Address</label>
                        <select name="ShippingAddressId" class="form-select" required>
                            <option value="">-- Choose Address --</option>
                            @foreach (var address in Model.ShippingAddresses)
                            {
                                <option value="@address.Id">
                                    @address.AddressName - @address.Street, @address.City, @address.Country
                                </option>
                            }
                        </select>
                    </div>
                    <div>
                        <a asp-controller="ShippingAddress" asp-action="Index" class="btn btn-outline-primary w-50">
                            <i class="bi bi-gear-fill me-1"></i>Manage Addresses
                        </a>
                    </div>
                </div>

                <div class="p-4 border rounded-3 shadow-sm">
                    <h4 class="mb-4">Select a Credit Card</h4>

                    <div class="mb-3">
                        <select class="form-select" name="SavedCardId" id="savedCardId" onchange="toggleCardInputs(this.value)">
                            <option value="">-- Use New Card --</option>
                            @foreach (var card in Model.SavedCards)
                            {
                                <option value="@card.CreditCardId">
                                    **** **** **** @card.CardNumber.Substring(card.CardNumber.Length - 4)
                                </option>
                            }
                        </select>
                    </div>

                    <div id="newCardInputs">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <label class="form-label">Cardholder Name</label>
                                <input type="text" name="CardholderName" class="form-control" />
                            </div>
                            <div class="col-md-12">
                                <label class="form-label">Card Number</label>
                                <input type="text" name="CardNumber" class="form-control" maxlength="16" />
                            </div>
                            <div class="col-md-12">
                                <label class="form-label">Card Type</label>
                                <select class="form-select" name="CardType">
                                    <option value="">-- Select Card Type --</option>
                                    @foreach (var card in cardTypes)
                                    {
                                        <option value="@card.Value">@card.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Expiration Date</label>
                                <input type="text" name="Expiration" class="form-control" placeholder="MM/YY" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">CVV</label>
                                <input type="text" name="CVV" class="form-control" maxlength="4" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Billing Street</label>
                                <input type="text" name="BillingStreet" class="form-control" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Billing City</label>
                                <input type="text" name="BillingCity" class="form-control" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Billing State</label>
                                <input type="text" name="BillingState" class="form-control" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Billing Country</label>
                                <input type="text" name="BillingCountry" class="form-control" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Billing ZIP</label>
                                <input type="text" name="BillingZip" class="form-control" />
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-lg-4">
                <div class="p-4 border rounded-3 shadow-sm">
                    <h5 class="mb-3">Order Summary</h5>
                    <ul class="list-unstyled">
                        <li class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>@subtotal.ToString("C")</span>
                        </li>
                        <li class="d-flex justify-content-between mb-2">
                            <span>Tax (10%):</span>
                            <span>@tax.ToString("C")</span>
                        </li>
                        <li class="d-flex justify-content-between border-top pt-2 fw-bold text-success fs-5">
                            <span>Total:</span>
                            <span>@total.ToString("C")</span>
                        </li>
                    </ul>

                    <div class="d-grid mt-4">
                        <button type="submit" class="btn btn-lg btn-success">
                            <i class="bi bi-credit-card"></i> Pay & Place Order
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function toggleCardInputs(cardId) {
            const showInputs = cardId === "";
            document.getElementById("newCardInputs").style.display = showInputs ? "block" : "none";
        }
    </script>
}
