@model IEnumerable<NewarkITStore.ViewModels.CreditCardStatsViewModel>

@{
    ViewData["Title"] = "Total Amount Charged per Credit Card";
}

<h2>@ViewData["Title"]</h2>

<canvas id="totalPerCardChart" width="600" height="200"></canvas>

<button id="downloadChartBtn" class="btn btn-outline-primary mt-3 mb-3 ms-2">
    Download Chart as Image
</button>


<button id="downloadCsvBtn" class="btn btn-outline-success mt-3 mb-3">
    Download CSV
</button>
<button id="downloadPdfBtn" class="btn btn-outline-danger mt-3 mb-3 ms-2">
    Download PDF
</button>

<form method="get" class="mb-4">
    <div class="row row-cols-lg-auto g-3 align-items-center mb-2">
        <div class="col">
            <input type="text" name="email" value="@Context.Request.Query["email"]" class="form-control" placeholder="Email" />
        </div>
        <div class="col">
            <input type="text" name="cardLast4" value="@Context.Request.Query["cardLast4"]" class="form-control" maxlength="4" placeholder="Card Last 4" />
        </div>
        <div class="col">
            <input type="number" name="minAmount" value="@Context.Request.Query["minAmount"]" class="form-control" step="0.01" placeholder="Min $" />
        </div>
        <div class="col">
            <input type="number" name="maxAmount" value="@Context.Request.Query["maxAmount"]" class="form-control" step="0.01" placeholder="Max $" />
        </div>
    </div>

    <div class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col d-flex align-items-center">
            <label for="startDate" class="me-2 mb-0">From</label>
            <input type="date" id="startDate" name="startDate" value="@Context.Request.Query["startDate"]" class="form-control" />
        </div>
        <div class="col d-flex align-items-center">
            <label for="endDate" class="me-2 mb-0">To</label>
            <input type="date" id="endDate" name="endDate" value="@Context.Request.Query["endDate"]" class="form-control" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>




<table class="table table-bordered mt-3">
    <thead class="table-light">
        <tr>
            <th>User Email</th>
            <th>Masked Card Number</th>
            <th>Total Charged</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var stat in Model)
        {
            <tr>
                <td>@stat.UserEmail</td>
                <td>@stat.MaskedCardNumber</td>
                <td>@stat.TotalCharged.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const ctx = document.getElementById('totalPerCardChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Select(x => x.UserEmail + " (" + x.MaskedCardNumber + ")"))),
                datasets: [{
                    label: 'Total Charged',
                    data: @Html.Raw(Json.Serialize(Model.Select(x => x.TotalCharged))),
                    backgroundColor: 'rgba(54, 162, 235, 0.6)'
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Total Charged per Credit Card'
                    }
                }
            }
        });
    </script>

    <script>
        const creditCardStats = @Html.Raw(Json.Serialize(Model));

        document.getElementById('downloadCsvBtn').addEventListener('click', function () {
            let csvContent = "data:text/csv;charset=utf-8,";
            csvContent += "User Email,Masked Card Number,Total Charged\n";

                    creditCardStats.forEach(stat => {
            csvContent += `${stat.userEmail},${stat.maskedCardNumber},$${stat.totalCharged.toFixed(2)}\n`;
        });


            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "total_charged_per_credit_card.csv");
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

    <script>
        document.getElementById('downloadPdfBtn').addEventListener('click', function () {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            const headers = [["User Email", "Masked Card Number", "Total Charged"]];
            const rows = creditCardStats.map(stat => [
                stat.userEmail,
                stat.maskedCardNumber,
                `$${stat.totalCharged.toFixed(2)}`
            ]);

            doc.text("Total Charged per Credit Card", 14, 15);
            doc.autoTable({
                head: headers,
                body: rows,
                startY: 20,
                theme: 'grid'
            });

            doc.save("total_charged_per_credit_card.pdf");
        });
    </script>

    <script>
        document.getElementById('downloadChartBtn').addEventListener('click', function () {
            const canvas = document.getElementById('totalPerCardChart');
            const imageURL = canvas.toDataURL('image/png');

            const link = document.createElement('a');
            link.href = imageURL;
            link.download = 'total_charged_per_credit_card_chart.png';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
    </script>


}