@model List<NewarkITStore.ViewModels.AdminOrderViewModel>  
@using NewarkITStore.Models
@using static NewarkITStore.Models.Order


@{
    ViewData["Title"] = "All Orders";
}

<h2>All Orders</h2>

<form asp-action="Index" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4 mb-2">
            <input type="text" name="searchEmail" value="@Context.Request.Query["searchEmail"]"
                   class="form-control" placeholder="Search by email..." />
        </div>

        <div class="col-md-4 mb-2">
            <select name="filterStatus" class="form-control">
                <option value="">All Statuses</option>
                @foreach (var status in Enum.GetValues(typeof(OrderStatus)))
                {
                    var selected = Context.Request.Query["filterStatus"] == status.ToString() ? "selected" : "";
                    <option value="@status" selected="@(Context.Request.Query["filterStatus"] == status.ToString() ? "selected" : null)">
                        @status
                    </option>

                }
            </select>
        </div>

        <div class="col-md-2 mb-2">
            <button type="submit" class="btn btn-primary btn-block">Filter</button>
        </div>
    </div>
</form>

@if (!string.IsNullOrEmpty(Context.Request.Query["searchEmail"]) || !string.IsNullOrEmpty(Context.Request.Query["filterStatus"]))
{
    <p>
        Showing results for:
        @if (!string.IsNullOrEmpty(Context.Request.Query["searchEmail"]))
        {
            <strong>Email:</strong> @Context.Request.Query["searchEmail"]
        }
        @if (!string.IsNullOrEmpty(Context.Request.Query["filterStatus"]))
        {
            <strong>Status:</strong> @Context.Request.Query["filterStatus"]
        }
    </p>
}

<table class="table table-bordered">
    <thead class="table-light">
        <tr>
            <th>Order #</th>
            <th>User ID</th>
            <th>Order Date</th>
            <th>Status</th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderId</td>
                <td>@order.UserEmail</td>
                <td>@order.OrderDate.ToShortDateString()</td>
                <td>
                    <span class="badge bg-@GetStatusColor(order.Status)">
                        @order.Status
                    </span>
                </td>
                <td>
                    @order.Total.ToString("C")
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@order.OrderId" class="btn btn-sm btn-outline-primary">View</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    private string GetStatusColor(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.Shipped => "info",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
